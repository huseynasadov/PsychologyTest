// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Psychology.Data;

namespace Psychology.Data.Migrations
{
    [DbContext(typeof(PsychologyDbContext))]
    [Migration("20221109132623_tablesAdded")]
    partial class tablesAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Psychology.Core.Models.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("AdminStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)3);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 300, DateTimeKind.Local).AddTicks(6334));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fullname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvitedToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 303, DateTimeKind.Local).AddTicks(3158));

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProfilePhoto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Token")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 9223372036854775807L,
                            AdminStatus = (byte)1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            Fullname = "Admin",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "AQAAAAEAACcQAAAAEGhVIzOdlRnwlA5tAFVefwYp9yQ6f7lqNA9b0R8kwMvNvvzwwZ2/xaJ8yBOVLG60PA==",
                            Status = false,
                            Token = "1fa9fdb7-d495-4017-b2ba-1e96c2b38b47"
                        });
                });

            modelBuilder.Entity("Psychology.Core.Models.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 336, DateTimeKind.Local).AddTicks(7743));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 336, DateTimeKind.Local).AddTicks(8594));

                    b.Property<int>("PercentageIntrovert")
                        .HasColumnType("int");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 9223372036854775806L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Don’t dare to interrupt them",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 70,
                            QuestionId = 9223372036854775806L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775805L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Think it’s more important to give them some of your time; work can wait",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 20,
                            QuestionId = 9223372036854775806L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775804L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Listen, but with only with half an ear",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 56,
                            QuestionId = 9223372036854775806L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775803L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Interrupt and explain that you are really busy at the moment",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 40,
                            QuestionId = 9223372036854775806L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775802L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Look at your watch every two minutes",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 30,
                            QuestionId = 9223372036854775805L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775801L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bubble with inner anger, but keep quiet",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 90,
                            QuestionId = 9223372036854775805L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775800L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Explain to other equally impatient people in the room that the doctor is always running late",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 58,
                            QuestionId = 9223372036854775805L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775799L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Complain in a loud voice, while tapping your foot impatiently",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 25,
                            QuestionId = 9223372036854775805L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775798L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Don’t dare contradict them",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 67,
                            QuestionId = 9223372036854775804L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775797L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Think that they are obviously right",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 55,
                            QuestionId = 9223372036854775804L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775796L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Defend your own point of view, tooth and nail",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 32,
                            QuestionId = 9223372036854775804L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775795L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Continuously interrupt your colleague",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 27,
                            QuestionId = 9223372036854775804L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775794L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Are a bit too far towards the back so don’t really hear what the guide is saying",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 55,
                            QuestionId = 9223372036854775803L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775793L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Follow the group without question",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 76,
                            QuestionId = 9223372036854775803L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775792L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Make sure that everyone is able to hear properly",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 55,
                            QuestionId = 9223372036854775803L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775791L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Are right up the front, adding your own comments in a loud voice",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 20,
                            QuestionId = 9223372036854775803L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775790L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ask you to tell a story in front of everyone else",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 71,
                            QuestionId = 9223372036854775802L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775789L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Talk privately between themselves",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 34,
                            QuestionId = 9223372036854775802L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775788L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hang around you all evening",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 78,
                            QuestionId = 9223372036854775802L,
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775787L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Always drag the conversation back to themselves",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PercentageIntrovert = 20,
                            QuestionId = 9223372036854775802L,
                            Status = false
                        });
                });

            modelBuilder.Entity("Psychology.Core.Models.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 330, DateTimeKind.Local).AddTicks(596));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 330, DateTimeKind.Local).AddTicks(1598));

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 9223372036854775806L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "You’re really busy at work and a colleague is telling you their life story and personal woes. You:",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775805L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "You’ve been sitting in the doctor’s waiting room for more than 25 minutes. You:",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775804L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "You’re having an animated discussion with a colleague regarding a project that you’re in charge of. You:",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775803L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "You are taking part in a guided tour of a museum. You:",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 9223372036854775802L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "During dinner parties at your home, you have a hard time with people who:",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        });
                });

            modelBuilder.Entity("Psychology.Core.Models.Testing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 348, DateTimeKind.Local).AddTicks(5251));

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 348, DateTimeKind.Local).AddTicks(6172));

                    b.Property<int>("PercentageExtrovert")
                        .HasColumnType("int");

                    b.Property<int>("PersentageIntrovert")
                        .HasColumnType("int");

                    b.Property<int>("QuestionCount")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.ToTable("Testings");
                });

            modelBuilder.Entity("Psychology.Core.Models.TestingAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AnswerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 352, DateTimeKind.Local).AddTicks(7560));

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 9, 17, 26, 22, 352, DateTimeKind.Local).AddTicks(8605));

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long>("TestingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("TestingId");

                    b.ToTable("TestingAnswers");
                });

            modelBuilder.Entity("Psychology.Core.Models.Answer", b =>
                {
                    b.HasOne("Psychology.Core.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Psychology.Core.Models.TestingAnswer", b =>
                {
                    b.HasOne("Psychology.Core.Models.Answer", "Answer")
                        .WithMany("TestingAnswers")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Psychology.Core.Models.Testing", "Testing")
                        .WithMany("TestingAnswers")
                        .HasForeignKey("TestingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Testing");
                });

            modelBuilder.Entity("Psychology.Core.Models.Answer", b =>
                {
                    b.Navigation("TestingAnswers");
                });

            modelBuilder.Entity("Psychology.Core.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Psychology.Core.Models.Testing", b =>
                {
                    b.Navigation("TestingAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
